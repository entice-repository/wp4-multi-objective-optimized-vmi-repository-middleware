
package com.vmrepository.repoguardwebserver;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AddVMIImplementation", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AddVMIImplementation {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "optDistribute", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.OptDistribute")
    @ResponseWrapper(localName = "optDistributeResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.OptDistributeResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/optDistributeRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/optDistributeResponse")
    public boolean optDistribute(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws FileNotFoundException_Exception
     * @throws IOException_Exception
     */
    @WebMethod(operationName = "StorageNodes")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "StorageNodes", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.StorageNodes")
    @ResponseWrapper(localName = "StorageNodesResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.StorageNodesResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/StorageNodesRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/StorageNodesResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/StorageNodes/Fault/FileNotFoundException"),
        @FaultAction(className = IOException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/StorageNodes/Fault/IOException")
    })
    public List<String> storageNodes()
        throws FileNotFoundException_Exception, IOException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws FileNotFoundException_Exception
     * @throws IOException_Exception
     */
    @WebMethod(operationName = "Authenticate")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Authenticate", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.Authenticate")
    @ResponseWrapper(localName = "AuthenticateResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.AuthenticateResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/AuthenticateRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/AuthenticateResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/Authenticate/Fault/FileNotFoundException"),
        @FaultAction(className = IOException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/Authenticate/Fault/IOException")
    })
    public boolean authenticate(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws FileNotFoundException_Exception, IOException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws FileNotFoundException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBucketList", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.GetBucketList")
    @ResponseWrapper(localName = "getBucketListResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.GetBucketListResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/getBucketListRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/getBucketListResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/getBucketList/Fault/FileNotFoundException"),
        @FaultAction(className = IOException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/getBucketList/Fault/IOException")
    })
    public List<String> getBucketList(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws FileNotFoundException_Exception, IOException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws FileNotFoundException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBucketVMIList", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.GetBucketVMIList")
    @ResponseWrapper(localName = "getBucketVMIListResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.GetBucketVMIListResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/getBucketVMIListRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/getBucketVMIListResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/getBucketVMIList/Fault/FileNotFoundException"),
        @FaultAction(className = IOException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/getBucketVMIList/Fault/IOException")
    })
    public List<String> getBucketVMIList(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws FileNotFoundException_Exception, IOException_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws FileNotFoundException_Exception
     * @throws URISyntaxException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "receiveVMImage", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.ReceiveVMImage")
    @ResponseWrapper(localName = "receiveVMImageResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.ReceiveVMImageResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveVMImageRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveVMImageResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveVMImage/Fault/FileNotFoundException"),
        @FaultAction(className = IOException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveVMImage/Fault/IOException"),
        @FaultAction(className = URISyntaxException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveVMImage/Fault/URISyntaxException")
    })
    public List<String> receiveVMImage(
        @WebParam(name = "arg0", targetNamespace = "")
        byte[] arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        long arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4)
        throws FileNotFoundException_Exception, IOException_Exception, URISyntaxException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "upload", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.Upload")
    @ResponseWrapper(localName = "uploadResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.UploadResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/uploadRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/uploadResponse")
    public long upload(
        @WebParam(name = "arg0", targetNamespace = "")
        byte[] arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws FileNotFoundException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "uploadVMIAsObjectStorage", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.UploadVMIAsObjectStorage")
    @ResponseWrapper(localName = "uploadVMIAsObjectStorageResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.UploadVMIAsObjectStorageResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/uploadVMIAsObjectStorageRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/uploadVMIAsObjectStorageResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/uploadVMIAsObjectStorage/Fault/FileNotFoundException"),
        @FaultAction(className = IOException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/uploadVMIAsObjectStorage/Fault/IOException")
    })
    public void uploadVMIAsObjectStorage(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2)
        throws FileNotFoundException_Exception, IOException_Exception
    ;

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "cleanVMI", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.CleanVMI")
    @ResponseWrapper(localName = "cleanVMIResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.CleanVMIResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/cleanVMIRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/cleanVMIResponse")
    public void cleanVMI(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws FileNotFoundException_Exception
     * @throws URISyntaxException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "receiveOptimizedVMImage", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.ReceiveOptimizedVMImage")
    @ResponseWrapper(localName = "receiveOptimizedVMImageResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.ReceiveOptimizedVMImageResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveOptimizedVMImageRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveOptimizedVMImageResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveOptimizedVMImage/Fault/FileNotFoundException"),
        @FaultAction(className = IOException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveOptimizedVMImage/Fault/IOException"),
        @FaultAction(className = URISyntaxException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveOptimizedVMImage/Fault/URISyntaxException")
    })
    public List<String> receiveOptimizedVMImage(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4)
        throws FileNotFoundException_Exception, IOException_Exception, URISyntaxException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "downloadVMIViaURI", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.DownloadVMIViaURI")
    @ResponseWrapper(localName = "downloadVMIViaURIResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.DownloadVMIViaURIResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/downloadVMIViaURIRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/downloadVMIViaURIResponse")
    public void downloadVMIViaURI(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws FileNotFoundException_Exception
     * @throws URISyntaxException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "uploadOptimizedVMImage", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.UploadOptimizedVMImage")
    @ResponseWrapper(localName = "uploadOptimizedVMImageResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.UploadOptimizedVMImageResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/uploadOptimizedVMImageRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/uploadOptimizedVMImageResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/uploadOptimizedVMImage/Fault/FileNotFoundException"),
        @FaultAction(className = IOException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/uploadOptimizedVMImage/Fault/IOException"),
        @FaultAction(className = URISyntaxException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/uploadOptimizedVMImage/Fault/URISyntaxException")
    })
    public List<String> uploadOptimizedVMImage(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4)
        throws FileNotFoundException_Exception, IOException_Exception, URISyntaxException_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws FileNotFoundException_Exception
     * @throws URISyntaxException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "receiveVMImageFragments", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.ReceiveVMImageFragments")
    @ResponseWrapper(localName = "receiveVMImageFragmentsResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.ReceiveVMImageFragmentsResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveVMImageFragmentsRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveVMImageFragmentsResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveVMImageFragments/Fault/FileNotFoundException"),
        @FaultAction(className = IOException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveVMImageFragments/Fault/IOException"),
        @FaultAction(className = URISyntaxException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveVMImageFragments/Fault/URISyntaxException")
    })
    public List<String> receiveVMImageFragments(
        @WebParam(name = "arg0", targetNamespace = "")
        byte[] arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        long arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4)
        throws FileNotFoundException_Exception, IOException_Exception, URISyntaxException_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws FileNotFoundException_Exception
     * @throws URISyntaxException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "receiveVMImageFragmentsviaURI", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.ReceiveVMImageFragmentsviaURI")
    @ResponseWrapper(localName = "receiveVMImageFragmentsviaURIResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.ReceiveVMImageFragmentsviaURIResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveVMImageFragmentsviaURIRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveVMImageFragmentsviaURIResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveVMImageFragmentsviaURI/Fault/FileNotFoundException"),
        @FaultAction(className = IOException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveVMImageFragmentsviaURI/Fault/IOException"),
        @FaultAction(className = URISyntaxException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/receiveVMImageFragmentsviaURI/Fault/URISyntaxException")
    })
    public List<String> receiveVMImageFragmentsviaURI(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3)
        throws FileNotFoundException_Exception, IOException_Exception, URISyntaxException_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws FileNotFoundException_Exception
     * @throws ParseException_Exception
     * @throws URISyntaxException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "reDistribution", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.ReDistribution")
    @ResponseWrapper(localName = "reDistributionResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.ReDistributionResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/reDistributionRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/reDistributionResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/reDistribution/Fault/ParseException"),
        @FaultAction(className = URISyntaxException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/reDistribution/Fault/URISyntaxException"),
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/reDistribution/Fault/FileNotFoundException"),
        @FaultAction(className = IOException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/reDistribution/Fault/IOException")
    })
    public List<String> reDistribution(
        @WebParam(name = "arg0", targetNamespace = "")
        byte[] arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        long arg3)
        throws FileNotFoundException_Exception, IOException_Exception, ParseException_Exception, URISyntaxException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "uploadRedistributionFile", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.UploadRedistributionFile")
    @ResponseWrapper(localName = "uploadRedistributionFileResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.UploadRedistributionFileResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/uploadRedistributionFileRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/uploadRedistributionFileResponse")
    public long uploadRedistributionFile(
        @WebParam(name = "arg0", targetNamespace = "")
        byte[] arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws FileNotFoundException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteUnoptimizedVMI", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.DeleteUnoptimizedVMI")
    @ResponseWrapper(localName = "deleteUnoptimizedVMIResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.DeleteUnoptimizedVMIResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/deleteUnoptimizedVMIRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/deleteUnoptimizedVMIResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/deleteUnoptimizedVMI/Fault/FileNotFoundException"),
        @FaultAction(className = IOException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/deleteUnoptimizedVMI/Fault/IOException")
    })
    public void deleteUnoptimizedVMI(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2)
        throws FileNotFoundException_Exception, IOException_Exception
    ;

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "cleanFile", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.CleanFile")
    @ResponseWrapper(localName = "cleanFileResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.CleanFileResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/cleanFileRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/cleanFileResponse")
    public void cleanFile(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws URISyntaxException_Exception
     * @throws MalformedURLException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "parserURL", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.ParserURL")
    @ResponseWrapper(localName = "parserURLResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.ParserURLResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/parserURLRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/parserURLResponse", fault = {
        @FaultAction(className = URISyntaxException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/parserURL/Fault/URISyntaxException"),
        @FaultAction(className = MalformedURLException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/parserURL/Fault/MalformedURLException")
    })
    public String parserURL(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws MalformedURLException_Exception, URISyntaxException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws FileNotFoundException_Exception
     * @throws URISyntaxException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trackLocation", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.TrackLocation")
    @ResponseWrapper(localName = "trackLocationResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.TrackLocationResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/trackLocationRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/trackLocationResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/trackLocation/Fault/FileNotFoundException"),
        @FaultAction(className = IOException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/trackLocation/Fault/IOException"),
        @FaultAction(className = URISyntaxException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/trackLocation/Fault/URISyntaxException")
    })
    public List<String> trackLocation(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws FileNotFoundException_Exception, IOException_Exception, URISyntaxException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws URISyntaxException_Exception
     * @throws UnknownHostException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVMIIP", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.GetVMIIP")
    @ResponseWrapper(localName = "getVMIIPResponse", targetNamespace = "http://RepoGuardWebServer.vmrepository.com/", className = "com.vmrepository.repoguardwebserver.GetVMIIPResponse")
    @Action(input = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/getVMIIPRequest", output = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/getVMIIPResponse", fault = {
        @FaultAction(className = UnknownHostException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/getVMIIP/Fault/UnknownHostException"),
        @FaultAction(className = URISyntaxException_Exception.class, value = "http://RepoGuardWebServer.vmrepository.com/AddVMIImplementation/getVMIIP/Fault/URISyntaxException")
    })
    public String getVMIIP(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws URISyntaxException_Exception, UnknownHostException_Exception
    ;

}
